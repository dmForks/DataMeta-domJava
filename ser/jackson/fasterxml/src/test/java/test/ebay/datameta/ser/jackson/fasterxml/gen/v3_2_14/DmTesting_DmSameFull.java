package test.ebay.datameta.ser.jackson.fasterxml.gen.v3_2_14;

import java.math.BigDecimal;
import java.time.ZonedDateTime;
import java.util.List;


import org.ebay.datameta.dom.DataMetaSame;
import org.ebay.datameta.util.jdk.SemanticVersion;

/**

 * This class is generated by
 * <a href='https://github.com/eBayDataMeta/DataMeta'>DataMeta</a>.
 */
public class DmTesting_DmSameFull implements DataMetaSame<DmTesting>{
    /**
    * Convenience instance.
    */
    public final static DmTesting_DmSameFull I = new DmTesting_DmSameFull();
    @Override public boolean isSame(final DmTesting one, final DmTesting another) {
        if(one == another) return true; // same object or both are null
        //noinspection SimplifiableIfStatement
        if(one == null || another == null) return false; // whichever of them is null but the other is not
        
        final List<TestingDm> embs___1__ = one.getEmbs();
        final List<TestingDm> embs___2__ = another.getEmbs();
        if(embs___1__ != embs___2__ )  {
            if(embs___1__ == null || embs___2__ == null ) return false; // one of them is null but not both -- not equal short-circuit
            java.util.ListIterator<TestingDm> embs___li1__ = embs___1__.listIterator();
            java.util.ListIterator<TestingDm> embs___li2__ = embs___2__.listIterator();
            while(embs___li1__.hasNext() && embs___li2__.hasNext()) {
                final TestingDm o1 = embs___li1__.next(), o2 = embs___li2__.next();
                if(!(o1 == null ? o2 == null : TestingDm_DmSameFull.I.isSame(o1, o2))) return false; // shortcircuit to false
            }
            if(embs___li1__.hasNext() || embs___li2__.hasNext()) return false; // leftover elements in one
        }

        return EQ.isSame(one.getIntVal(), another.getIntVal()) && EQ.isSame(one.getLongVal(), another.getLongVal()) && EQ.isSame(one.getName(), another.getName()) && EQ.isSame(one.getEmail(), another.getEmail()) && EQ.isSame(one.getCreated(), another.getCreated()) && EQ.isSame(one.getSalary(), another.getSalary()) && (one.getColor() == another.getColor()) && TestingDm_DmSameFull.I.isSame(one.getEmbedded(), another.getEmbedded());
    }
    public static final SemanticVersion VERSION = SemanticVersion.parse("3.2.14");
}
